{"version":3,"file":"static/js/484.f22a26af.chunk.js","mappings":"wKACA,GAAgB,KAAO,wBAAwB,KAAO,wBAAwB,SAAW,4BAA4B,IAAM,wBCA3H,EAA2B,0BAA3B,EAA+D,yB,SCY/D,EARgB,SAACA,GACb,OACI,gBAAKC,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,EAAhB,SAA4BF,EAAMG,aCP9C,EAAuB,mBAAvB,EAAgD,kBAAhD,EAA2E,qB,UCkB3E,EAZa,SAACH,GAEV,IAAII,EAAM,+DAAiEJ,EAAMK,OAC7EC,EAAO,cAAgBN,EAAMO,GACjC,OACI,iBAAKN,UAAWC,EAAhB,WACI,gBAAKE,IAAKA,EAAKI,IAAI,GAAGP,UAAWC,KACjC,SAAC,KAAD,CAASO,GAAIH,EAAML,UAAWC,EAA9B,SAAyCF,EAAMU,W,uCCJvDC,GAAmBC,EAAAA,EAAAA,GAAe,IAWhCC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,WADkBD,EATR,SAACd,GAEjB,OACI,kBAAMgB,SAAUhB,EAAMiB,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUnB,UAAWC,EAAAA,SAAYQ,KAAM,UAAWW,YAAa,MAAOC,SAAU,CAACC,EAAAA,EAAUZ,MAC7G,mBAAQV,UAAWC,EAAAA,IAAnB,+BAyCZ,EAlCkB,SAACF,GACf,IAAIwB,EAAQxB,EAAMwB,MAAMC,KAAI,SAACC,GAAD,OAAU,SAAC,EAAD,CAAoBhB,KAAMgB,EAAKhB,KAAMH,GAAImB,EAAKnB,GAAIF,OAAQqB,EAAKrB,QAApDqB,EAAKnB,OAClDoB,EAAW3B,EAAM2B,SAASF,KAAI,SAACtB,GAAD,OAAa,SAAC,EAAD,CAA0BA,QAASA,EAAQA,SAA7BA,EAAQI,OAiBrE,OACI,iBAAKN,UAAWC,EAAAA,KAAhB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,SACKsB,KAEL,gBAAKvB,UAAWC,EAAAA,SAAhB,SACKyB,KAEL,gBAAK1B,UAAWC,EAAAA,QAEhB,SAACW,EAAD,CAAqBG,SAjBZ,SAACY,GAGd5B,EAAM6B,WAAWD,EAAOzB,gB,mBCMhC,GAAe2B,E,QAAAA,KACXC,EAAAA,EAAAA,KArBkB,SAACC,GACnB,MAAO,CACHR,MAAOQ,EAAMC,UAAUT,MACvBG,SAAUK,EAAMC,UAAUN,SAC1BO,eAAgBF,EAAMC,UAAUC,mBAKf,SAACC,GACtB,MAAO,CACHN,WAAY,SAACK,GACTC,GAASC,EAAAA,EAAAA,GAAuBF,SAUxCG,EAAAA,EAFJ,CAGEC,I,gJC5CEC,EAA6B,SAACP,GAC9B,MAAO,CACHQ,OAAQR,EAAMS,KAAKD,SAIdH,EAAmB,SAACK,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAA0B,IAAtBC,KAAK5C,MAAMwC,QAAyB,SAAC,KAAD,CAAU/B,GAAG,YAC9C,SAACiC,GAAD,UAAeE,KAAK5C,YAJQ,GACX6C,EAAAA,WAUhC,OAFqCd,EAAAA,EAAAA,IAAQQ,EAARR,CAAoCY","sources":["webpack://my-app/./src/components/Messenger/Messenger.module.css?367c","webpack://my-app/./src/components/Messenger/Message/Message.module.css?793d","components/Messenger/Message/Message.jsx","webpack://my-app/./src/components/Messenger/Chat/Chat.module.css?d98f","components/Messenger/Chat/Chat.jsx","components/Messenger/Messenger.jsx","components/Messenger/MessengerContainer.jsx","hoc/withAuth.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Messenger_main__rwweg\",\"flex\":\"Messenger_flex__LJmy4\",\"textarea\":\"Messenger_textarea__61-W2\",\"btn\":\"Messenger_btn__sTUr4\"};","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__edO+O\",\"message\":\"Message_message__-5n-s\"};","import React from \"react\";\r\nimport s from \"./Message.module.css\";\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"Chat_chat__kIniP\",\"img\":\"Chat_img__1nZpV\",\"person\":\"Chat_person__tG-pG\"};","import React from \"react\";\r\nimport s from \"./Chat.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Chat = (props) => {\r\n\r\n    let src = \"https://glebs1mple.github.io/demo-socialNetwork/img/Follower\" + props.srcimg;\r\n    let path = \"/Messenger/\" + props.id;\r\n    return (\r\n        <div className={s.chat}>\r\n            <img src={src} alt=\"\" className={s.img} />\r\n            <NavLink to={path} className={s.person}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport s from \"./Messenger.module.css\";\r\nimport Message from './Message/Message';\r\nimport Chat from './Chat/Chat';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\nimport { maxLengthThunk } from \"../../utils/validators\";\r\nimport { required } from './../../utils/validators';\r\n\r\nlet maxLengthThunk10 = maxLengthThunk(10);\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} className={s.textarea} name={\"message\"} placeholder={\"Add\"} validate={[required, maxLengthThunk10]}></Field>\r\n            <button className={s.btn}>Add Message</button>\r\n        </form>\r\n    )\r\n}\r\nconst MessageFormForRedux = reduxForm({\r\n    form: \"message\"\r\n})(MessageForm)\r\nconst Messenger = (props) => {\r\n    let chats = props.chats.map((chat) => <Chat key={chat.id} name={chat.name} id={chat.id} srcimg={chat.srcimg} />)\r\n    let messages = props.messages.map((message) => <Message key={message.id} message={message.message} />)\r\n    /*const onSubmit = (formData) => {\r\n        let body = formData.message;\r\n    }*/\r\n    /*let onMessageChange = () => {\r\n        //let body = newMessage.current.value;\r\n        //props.updateMesageActionCreator(text);\r\n        //props.dispatch(action);\r\n        props.messageUpdate(body);\r\n    }*/\r\n    let addMessage = (values) => {\r\n        //let text = newMessage.current.value;\r\n        //props.dispatch(addMesageActionCreator());\r\n        props.addMessage(values.message)\r\n        //props.messageUpdate(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.chats}>\r\n                {chats}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messages}\r\n            </div>\r\n            <div className={s.flex}>\r\n            </div>\r\n            <MessageFormForRedux onSubmit={addMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messenger;","import React from \"react\";\r\nimport { updateMesageActionCreator, addMesageActionCreator } from \"../../redux/messenger-reducer\";\r\nimport Messenger from './Messenger';\r\nimport { connect } from \"react-redux\";\r\nimport { WithAuthRedirect } from \"../../hoc/withAuth\";\r\nimport { compose } from \"redux\";\r\n\r\n/*\r\nconst MessengerContainer = (props) => {\r\n\r\n    let state = props.store.getState().messenger;\r\n    let addMessage = () => {\r\n        props.store.dispatch(addMesageActionCreator())\r\n    }\r\n\r\n    let onMessageChange = (text) => {\r\n        let action = updateMesageActionCreator(text);\r\n        props.store.dispatch(action);\r\n    }\r\n\r\n\r\n    return (<Messenger addMessage={addMessage} messageUpdate={onMessageChange} messages={state.messages} chats={state.chats} />)\r\n}\r\n*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        chats: state.messenger.chats,\r\n        messages: state.messenger.messages,\r\n        newMessageText: state.messenger.newMessageText,\r\n    }\r\n};\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMesageActionCreator(newMessageText));\r\n        },\r\n        /* messageUpdate: (body) => {\r\n             dispatch(updateMesageActionCreator(body));\r\n         },*/\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Messenger);\r\n\r\n/*let AuthRedirectComponent = WithAuthRedirect(Messenger);\r\n\r\n\r\nconst MessengerContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\n\r\nexport default MessengerContainer;*/","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Navigate to=\"/Login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","className","s","message","src","srcimg","path","id","alt","to","name","maxLengthThunk10","maxLengthThunk","MessageFormForRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","chats","map","chat","messages","values","addMessage","compose","connect","state","messenger","newMessageText","dispatch","addMesageActionCreator","WithAuthRedirect","Messenger","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}